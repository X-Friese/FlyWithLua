#!/bin/bash
#
# How to run
# cd $FlyWithLua_REPO
# ./build-FlyWithLua_lin_WithDocker_win_mac_WithCmake_OnLinux

rm -r FlyWithLua/win_x64/*.xpl
rm -r FlyWithLua/lin_x64/*.xpl
rm -r FlyWithLua/mac_x64/*.xpl

rm -r src/build-lin/*

# Windows build

 rm -r build/*
 cmake -S ./src -B ./build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=../src/Toolchain-mingw-w64-x86-64.cmake
 cmake --build ./build -v
 cp ./build/win.xpl ./FlyWithLua/win_x64/FlyWithLua.xpl


# Linux build

# building a version for Ubuntu 20.04
# It does not have the debugging info the other build has

(cd docker; make)
cp src/build-lin/lin.xpl FlyWithLua/lin_x64/FlyWithLua.xpl

# rm -r build/*
# cmake -S ./src -B ./build -DCMAKE_BUILD_TYPE=RelWithDebInfo
# cmake --build ./build -v
# cp ./build/lin.xpl ./FlyWithLua/64/


# Mac build

rm -r build/*
cmake -S ./src -B ./build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=../src/Toolchain-ubuntu-osxcross-x86_64-11.3.cmake
cmake --build ./build -v
cp ./build/mac.xpl ./mac_x86_64.xpl

rm -r build/*
cmake -S ./src -B ./build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=../src/Toolchain-ubuntu-osxcross-arm64-11.3.cmake -DBUILD_ARM=ON
cmake --build ./build -v
cp ./build/mac.xpl ./mac_arm64.xpl

lipo -create ./mac_x86_64.xpl ./mac_arm64.xpl -o ./FlyWithLua/mac_x64/FlyWithLua.xpl
rm mac_x86_64.xpl
rm mac_arm64.xpl


cp docs/FlyWithLua_Manual_en.pdf FlyWithLua/Documentation/FlyWithLua_Manual_en.pdf

exec $SHELL
#

